@model AdventureBook.Models.Adventure

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Adventure</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @Html.Hidden("nextPage", Context.Request.Query["nextPage"])
            <div class="form-group">
                <div class="form-group">
                    <input asp-for="Id" type="hidden" />
                </div>
            </div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />

                <label asp-for="Text" class="control-label">Description</label>
                <input asp-for="Text" class="form-control" />

                <label asp-for="Difficulty" class="control-label"></label>
                <input asp-for="Difficulty" class="form-control" />

                <label asp-for="DateTime" class="control-label">Date</label>
                <input asp-for="DateTime" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>

                @Html.LabelFor(x => x.SelectedTagIds, "Tags", new { @class = "control-label" })
                @Html.ListBoxFor(x => 
                        x.SelectedTagIds, 
                        Model.AllTags
                            .OrderBy(t => !Model.SelectedTagIds.Contains(t.Id))
                            .ThenBy(t => t.Name)
                            .Select(t => new SelectListItem(t.Name, t.Id.ToString())), 
                        new { @class = "form-control" })

            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Cancel</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
