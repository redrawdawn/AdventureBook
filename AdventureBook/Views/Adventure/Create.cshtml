@model AdventureBook.Models.Adventure

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Adventure</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <input asp-for="Title" class="form-control" placeholder="Title..." />
                <br />
                @Html.TextAreaFor(x => Model.Text, new { @class = "form-control", @placeholder = "Description..." })
                <br />
                <input asp-for="Difficulty" class="form-control" />
                <br />
                <input asp-for="DateTime" class="form-control" />
                <br />
                <span asp-validation-for="Title" class="text-danger"></span>

                @Html.LabelFor(x => x.SelectedTagIds, "Tags", new { @class = "control-label" })
                @Html.ListBoxFor(x =>
                        x.SelectedTagIds,
                        Model.AllTags
                            .OrderBy(t => !Model.SelectedTagIds.Contains(t.Id))
                            .ThenBy(t => t.Name)
                            .Select(t => new SelectListItem(t.Name, t.Id.ToString())),
                        new { @class = "form-control" })

            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
