@using System.Security.Claims

@model AdventureBook.Models.ViewModels.AdventuresViewModel

@{
    ViewData["Title"] = "Index";
    ViewBag.NextPageAfterAction = "Adventure";
}
<div class="container-fluid">
    <div class="">

        @using (Html.BeginForm("Search", "Adventure", FormMethod.Get, new { @class = "form-inline" }))
        {
            <a class="btn btn-secondary btn-sm" asp-action="Create">➕</a>
            <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>

            @Html.TextBoxFor(x => Model.SearchString, new { @class = "form-control", @placeholder = "Search..." })
            
            <input class="btn btn-secondary btn-sm" type="submit" value="🔎︎" />
        }
    </div>
    @if (Model.Adventures.Count == 0 && !string.IsNullOrEmpty(Model.SearchString)) 
    { 
        <div>
            <hr />
            <h1>Sorry, no adventures match "@(Model.SearchString)"</h1>
        </div>
    }
    @foreach (var item in Model.Adventures)
    {
        await Html.RenderPartialAsync("_CardPartial", item);
    }

</div>